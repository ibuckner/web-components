/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface NelTextInput {
    /**
    * Declare if element is disabled
    */
    'disabled': boolean;
    /**
    * Text mask
    */
    'mask': string;
    /**
    * Maximum length
    */
    'maxlength': number;
    /**
    * Minimum length
    */
    'minlength': number;
    /**
    * Text pattern
    */
    'pattern': string;
    /**
    * Text placeholder
    */
    'placeholder': string;
    /**
    * Text value
    */
    'value': string;
  }
  interface NelTextTag {
    /**
    * Main color
    */
    'color': string;
    /**
    * Declare if tag responds to delete/backspace keys
    */
    'deletable': boolean;
    /**
    * Declare if tag is disabled
    */
    'disabled': boolean;
    /**
    * Text label
    */
    'label': string;
    /**
    * Declare if tag can be selected
    */
    'selectable': boolean;
  }
}

declare global {


  interface HTMLNelTextInputElement extends Components.NelTextInput, HTMLStencilElement {}
  var HTMLNelTextInputElement: {
    prototype: HTMLNelTextInputElement;
    new (): HTMLNelTextInputElement;
  };

  interface HTMLNelTextTagElement extends Components.NelTextTag, HTMLStencilElement {}
  var HTMLNelTextTagElement: {
    prototype: HTMLNelTextTagElement;
    new (): HTMLNelTextTagElement;
  };
  interface HTMLElementTagNameMap {
    'nel-text-input': HTMLNelTextInputElement;
    'nel-text-tag': HTMLNelTextTagElement;
  }
}

declare namespace LocalJSX {
  interface NelTextInput extends JSXBase.HTMLAttributes<HTMLNelTextInputElement> {
    /**
    * Declare if element is disabled
    */
    'disabled'?: boolean;
    /**
    * Text mask
    */
    'mask'?: string;
    /**
    * Maximum length
    */
    'maxlength'?: number;
    /**
    * Minimum length
    */
    'minlength'?: number;
    /**
    * Text pattern
    */
    'pattern'?: string;
    /**
    * Text placeholder
    */
    'placeholder'?: string;
    /**
    * Text value
    */
    'value'?: string;
  }
  interface NelTextTag extends JSXBase.HTMLAttributes<HTMLNelTextTagElement> {
    /**
    * Main color
    */
    'color'?: string;
    /**
    * Declare if tag responds to delete/backspace keys
    */
    'deletable'?: boolean;
    /**
    * Declare if tag is disabled
    */
    'disabled'?: boolean;
    /**
    * Text label
    */
    'label'?: string;
    'onDeleted'?: (event: CustomEvent<any>) => void;
    'onDeleting'?: (event: CustomEvent<any>) => void;
    'onSelected'?: (event: CustomEvent<any>) => void;
    /**
    * Declare if tag can be selected
    */
    'selectable'?: boolean;
  }

  interface IntrinsicElements {
    'nel-text-input': NelTextInput;
    'nel-text-tag': NelTextTag;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


